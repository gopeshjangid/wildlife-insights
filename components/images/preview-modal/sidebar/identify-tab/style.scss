@import "css/settings";

.c-sidebar-identify-tab {
  height: 100%;
  display: flex;
  flex-direction: column;
  font-size: rem(14);

  .btn {
    display: block;
    width: calc(100% - #{map-get($spacers, 1) * 2});
    margin: 0 map-get($spacers, 1);
    // We remove the padding so when the button is small
    // the content still fits (history button for example)
    padding-left: 0;
    padding-right: 0;
    font-size: rem(14);
  }

  .id-actions-panel {
    margin-bottom: rem(15);
    button {
      margin-right: rem(3);
      margin-left: rem(3);
    }
    button:first-child {
      margin-left: rem(0);
    }
    button:last-child {
      margin-right: rem(2);
    }
  }

  .adjust-width {
    &-1 {
      button {
        img {
          margin-right: rem(5);
        }
      }
    }

    &-2 {
      button {
        img {
          margin-right: rem(2);
        }
      }
    }

    &-3 {
      button {
        font-size: rem(13);
        img {
          margin-right: rem(5);
        }
      }
    }
  }

  .action-btn-1 {
    // light-btn
    padding: rem(7);
    background-color: unset;
    box-shadow: unset;
    border-color: rgba(darken($black, 10%), 0.3);
    img {
      margin-right: rem(7);
    }
  }

  .action-btn-2 {
    // new-action-btn
    width: unset;
    padding: rem(7);
    margin: 0;
  }

  .action-btn-3 {
    //light-btn + new-action-btn
    @extend .action-btn-1;
    @extend .action-btn-2;
  }

  .action-btn-4 {
    //light-btn + new-action-btn + update-btn
    @extend .action-btn-3;
    color: $primary-alt;
  }

  .active-btn {
    background-color: $primary;
    border-color: $primary;
  }

  .seq-gen-msg {
    padding: 0 rem(5);
    button {
      color: $dark;
      path {
        fill: $dark;
      }
      transition: unset;
      &:not(:disabled):not(.disabled):active {
        path {
          fill: white;
        }
      }
    }
  }

  .edit-id-label {
    padding: rem(5);
    padding-left: rem(7);
    border-radius: rem(8);
    background-color: $solitude;
  }

  .close-btn {
    background: none;
    border: 0;
    padding: 0;
    width: rem(20);
    height: rem(20);
    img {
      vertical-align: unset;
    }
  }

  .label-text {
    margin-bottom: rem(5);
    font-weight: 500;
  }

  .scroll-container {
    min-height: rem(100);
    flex-shrink: 1;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    .message {
      height: 100%;
      display: flex;
      justify-content: center;
      align-content: center;
      flex-direction: column;
      text-align: center;
      color: rgba($black, 0.4);
    }
  }

  .fixed-container {
    flex-shrink: 0;
  }

  .burst-container {
    display: flex;
    flex-direction: column;
    &.full {
      height: 100%;
      padding-bottom: rem(26);
    }
    &.short {
      height: 80%;
    }
  }

  .bounding-box-section {
    .labels {
      color: $black;
      padding-left: rem(7);
      text-align: left;
    }
    hr {
      border-top: rem(1) solid rgba(darken($black, 10%), 0.3);
      &:first-child {
        margin: 0 0 rem(10);
      }
      &:last-child {
        margin: rem(10) 0 0;
      }
    }

    .bbox-user-response {
      margin-top: rem(10);
      p {
        margin: 0 0 rem(7) 0;
      }
      .user-options {
        display: flex;
        justify-content: space-between;
        button {
          &:focus {
            box-shadow: unset;
          }
        }
      }
    }

    .toggle-container {
      display: flex;
      justify-content: space-between;
      button {
        border: none;
        background: none;
      }

      // for toggle button
      .switch {
        position: relative;
        width: rem(50);
        height: rem(15);
        input {
          opacity: 0;
          width: 0;
          height: 0;
        }
      }

      .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: $zircon;
        transition: 0.4s;
        &:before {
          position: absolute;
          content: "";
          height: rem(23);
          width: rem(23);
          left: 0;
          bottom: rem(-4);
          background-color: $white;
          border: rem(1) solid rgba(darken($black, 10%), 0.1);
          box-shadow: 0 rem(3) rem(3) rgba(darken($black, 20%), 0.4);
          transition: 0.4s;
        }
      }

      input:checked + .slider {
        background-color: $secondary;
      }

      input:focus + .slider {
        box-shadow: 0 0 rem(1) $primary;
      }

      input:checked + .slider:before {
        transform: translateX(rem(26));
        background-color: $primary;
        border: rem(1) solid rgba(darken($primary, 10%), 0.1);
        box-shadow: 0 rem(3) rem(4) rgba(darken($primary, 40%), 0.4);
      }

      .slider.round {
        border-radius: rem(15);
      }

      .slider.round:before {
        border-radius: 50%;
      }
    }
  }
}
